package Vista;

import DAO.DAOException;
import hotelpoo.ReservaController;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author monfo
 */
public class Reserva extends javax.swing.JFrame {

    private ReservaController reservaController;

    public Reserva() throws SQLException {
        initComponents();
        reservaController = new ReservaController();
        cargarHabitaciones();
        cargarPasajeros();
        cargarReservas();
    }

    private void actualizarTodo() {
        cargarHabitaciones();
        cargarPasajeros();
        cargarReservas();
    }

    private void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void cargarHabitaciones() {
        try {
            reservaController.cargarHabitacionesEnLista(listHabitaciones);
        } catch (Exception e) {
            mostrarError("Error al cargar habitaciones: " + e.getMessage());
        }
    }

    private void cargarPasajeros() {
        try {
            reservaController.cargarPasajerosEnComboBox(pasajeroCombo);
        } catch (Exception e) {
            mostrarError("Error al cargar pasajeros: " + e.getMessage());
        }
    }

    private void cargarReservas() {
        try {

            String[] columnNames = {"ID Reserva", "Nombre", "Apellido", "Documento", "Check-in", "Check-out", "Seña", "Habitación"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

            List<Object[]> reservas = reservaController.obtenerDatosReservas();

            for (Object[] fila : reservas) {
                model.addRow(fila);
            }

            reservasTb.setModel(model);
        } catch (DAOException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar reservas: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private boolean validarEntradas() {

        Date fechaActual = new Date();

        if (fechaCheckIn.getDate().before(fechaActual)) {
            mostrarError("La fecha de check-in no puede ser anterior a la fecha actual.");
            return false;
        }

        if (fechaCheckOut.getDate().before(fechaActual)) {
            mostrarError("La fecha de check-out no puede ser anterior a la fecha actual.");
            return false;
        }
        if (fechaCheckIn.getDate() == null || fechaCheckOut.getDate() == null) {
            mostrarError("Debe seleccionar fechas válidas.");
            return false;
        }
        if (fechaCheckOut.getDate().before(fechaCheckIn.getDate())) {
            mostrarError("La fecha de check-out debe ser posterior a la de check-in.");
            return false;
        }
        if (seniaTxt.getText().isEmpty() || !seniaTxt.getText().matches("\\d+(\\.\\d+)?")) {
            mostrarError("Debe ingresar un monto válido para la seña.");
            return false;
        }

        return true;
    }

    private boolean validarEntradasDisponibilidad() {

        Date fechaActual = new Date();

        if (CheckInButton.getDate().before(fechaActual)) {
            mostrarError("La fecha de check-in no puede ser anterior a la fecha actual.");
            return false;
        }

        if (checkOutButton.getDate().before(fechaActual)) {
            mostrarError("La fecha de check-out no puede ser anterior a la fecha actual.");
            return false;
        }

        if (checkOutButton.getDate().before(CheckInButton.getDate())) {
            mostrarError("La fecha de check-out debe ser posterior a la de check-in.");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregarReservaButton = new javax.swing.JButton();
        ModificarReservaButton = new javax.swing.JButton();
        eliminarReservaButton = new javax.swing.JButton();
        pasajeroCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listHabitaciones = new javax.swing.JList<>();
        seniaTxt = new javax.swing.JTextField();
        habitacionesLbl = new javax.swing.JLabel();
        pasajeroLbl = new javax.swing.JLabel();
        seniaLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        checkInLbl = new javax.swing.JLabel();
        checkOutLbl = new javax.swing.JLabel();
        fechaCheckIn = new com.toedter.calendar.JDateChooser();
        fechaCheckOut = new com.toedter.calendar.JDateChooser();
        volverButtonReserva = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        disponibilidadTb = new javax.swing.JTable();
        CheckInButton = new com.toedter.calendar.JDateChooser();
        checkOutButton = new com.toedter.calendar.JDateChooser();
        desdeLbl = new javax.swing.JLabel();
        hastaLbl = new javax.swing.JLabel();
        disponibilidadButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        reservasTb = new javax.swing.JTable();
        disponibilidadLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregarReservaButton.setText("Agregar");
        agregarReservaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarReservaButtonActionPerformed(evt);
            }
        });

        ModificarReservaButton.setText("Modificar");
        ModificarReservaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarReservaButtonActionPerformed(evt);
            }
        });

        eliminarReservaButton.setText("Eliminar");
        eliminarReservaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarReservaButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listHabitaciones);

        habitacionesLbl.setText("Habitaciones:");

        pasajeroLbl.setText("Pasajero:");

        seniaLbl.setText("Seña:");

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setText("Gestión de Reservas");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        checkInLbl.setText("Fecha Check-in (dd/mm/yyyy):");

        checkOutLbl.setText("Fecha Check-out (dd/mm/yyyy):");

        volverButtonReserva.setText("Volver");
        volverButtonReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonReservaActionPerformed(evt);
            }
        });

        disponibilidadTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Numero Habitacion", "Camas Single", "Camas Dobles", "Precio Por Día", "Disponibilidad"
            }
        ));
        jScrollPane2.setViewportView(disponibilidadTb);

        desdeLbl.setText("Desde:");

        hastaLbl.setText("Hasta:");

        disponibilidadButton.setText("Consultar Disponibilidad");
        disponibilidadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disponibilidadButtonActionPerformed(evt);
            }
        });

        reservasTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Habitacion", "Pasajero", "Check-in", "Check-out", "Seña"
            }
        ));
        reservasTb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservasTbMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(reservasTb);

        disponibilidadLbl.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        disponibilidadLbl.setText("Disponibilidad");
        disponibilidadLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(disponibilidadLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(desdeLbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(CheckInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(hastaLbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(checkOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(disponibilidadButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(habitacionesLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkInLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(pasajeroLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(checkOutLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(seniaLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fechaCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pasajeroCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechaCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(seniaTxt))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ModificarReservaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(agregarReservaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eliminarReservaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(306, 306, 306))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(668, 668, 668)
                .addComponent(volverButtonReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(disponibilidadLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(93, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(habitacionesLbl)
                                        .addGap(31, 31, 31))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hastaLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(desdeLbl))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CheckInButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(disponibilidadButton)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pasajeroCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pasajeroLbl))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(checkInLbl)
                                    .addComponent(fechaCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkOutLbl))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(seniaLbl)
                                    .addComponent(seniaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(agregarReservaButton)
                                .addGap(18, 18, 18)
                                .addComponent(ModificarReservaButton)
                                .addGap(18, 18, 18)
                                .addComponent(eliminarReservaButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(volverButtonReserva)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarReservaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarReservaButtonActionPerformed
        if (validarEntradas()) {
            try {
                reservaController.agregarReserva(
                        listHabitaciones.getSelectedValuesList(),
                        (String) pasajeroCombo.getSelectedItem(),
                        fechaCheckIn.getDate(),
                        fechaCheckOut.getDate(),
                        seniaTxt.getText(),
                        reservasTb
                );
                fechaCheckIn.setDate(null);
                fechaCheckOut.setDate(null);
                seniaTxt.setText("");
                actualizarTodo();

            } catch (Exception e) {
                mostrarError("Error al agregar la reserva: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_agregarReservaButtonActionPerformed

    private void volverButtonReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonReservaActionPerformed
        Menu pasajero = new Menu();
        pasajero.setLocationRelativeTo(null);
        pasajero.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_volverButtonReservaActionPerformed

    private void disponibilidadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disponibilidadButtonActionPerformed
        if (validarEntradasDisponibilidad()) {
            try {
                reservaController.mostrarDisponibilidad(
                        CheckInButton.getDate(),
                        checkOutButton.getDate(),
                        disponibilidadTb
                );
            } catch (Exception e) {
                mostrarError("Error al verificar disponibilidad: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_disponibilidadButtonActionPerformed

    private void eliminarReservaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarReservaButtonActionPerformed
        int filaSeleccionada = reservasTb.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar esta reserva?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    reservaController.eliminarReservaDesdeTabla(reservasTb);
                    actualizarTodo();
                } catch (Exception e) {
                    mostrarError("Error al eliminar la reserva: " + e.getMessage());
                }
            }
        } else {
            mostrarError("Seleccione una reserva para eliminar.");
        }
    }//GEN-LAST:event_eliminarReservaButtonActionPerformed

    private void reservasTbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservasTbMouseClicked

    }//GEN-LAST:event_reservasTbMouseClicked

    private void ModificarReservaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarReservaButtonActionPerformed
        if (validarEntradas()) {
            try {
                reservaController.modificarReservaSeleccionada(
                        reservasTb,
                        fechaCheckIn.getDate(),
                        fechaCheckOut.getDate(),
                        seniaTxt.getText(),
                        (String) pasajeroCombo.getSelectedItem(),
                        listHabitaciones.getSelectedValuesList()
                );
                fechaCheckIn.setDate(null);
                fechaCheckOut.setDate(null);
                seniaTxt.setText("");
                actualizarTodo();
                JOptionPane.showMessageDialog(this, "Reserva modificada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                mostrarError("Error al modificar la reserva: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_ModificarReservaButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser CheckInButton;
    private javax.swing.JButton ModificarReservaButton;
    private javax.swing.JButton agregarReservaButton;
    private javax.swing.JLabel checkInLbl;
    private com.toedter.calendar.JDateChooser checkOutButton;
    private javax.swing.JLabel checkOutLbl;
    private javax.swing.JLabel desdeLbl;
    private javax.swing.JButton disponibilidadButton;
    private javax.swing.JLabel disponibilidadLbl;
    private javax.swing.JTable disponibilidadTb;
    private javax.swing.JButton eliminarReservaButton;
    private com.toedter.calendar.JDateChooser fechaCheckIn;
    private com.toedter.calendar.JDateChooser fechaCheckOut;
    private javax.swing.JLabel habitacionesLbl;
    private javax.swing.JLabel hastaLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listHabitaciones;
    private javax.swing.JComboBox<String> pasajeroCombo;
    private javax.swing.JLabel pasajeroLbl;
    private javax.swing.JTable reservasTb;
    private javax.swing.JLabel seniaLbl;
    private javax.swing.JTextField seniaTxt;
    private javax.swing.JButton volverButtonReserva;
    // End of variables declaration//GEN-END:variables
}
